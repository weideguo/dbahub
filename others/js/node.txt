node.js
实现js在服务端运行



脚本模式
node helloworld.js


交互模式
node //进入命令行


##########################################################################包管理
npm node package manage        

npm init                   #创建package.json文件
npm run run_tag            #run_tag为package.json中scripts块指定的名字
npm run build              #即实际执行 node build/build.js    生成dist目录即可当成静态html项目使用 但不能直接用浏览器打开文件
npm install                #安装所有依赖包 文件package.json中模块dependencies、devDependencies的包
npm install -g package-name   #全局安装模块 安装在node目录的lib/node_modules
npm install package-name   #安装模块，默认只在当前项目的目录安装 安装在当前目录的node_modules
npm install --production   #安装文件package.json中模块dependencies的包

npm install vue-loader@14.2.4  #安装指定版本依赖包
npm update vue-loader@14.2.4  #升级到指定版本

npm uninstall -g vue-cli   #移除包

npm info package-name      #查看模块的信息 如版本号

--save-dev                 #安装同时写入package.json 的 devDependencies模块   
--save                     #安装同时写入package.json 的 dependencies模块   编译后依赖的包需要存放于此

npm ls --depth 0           #列出安装过的模块
npm ls -g --depth 0

npm install -g less
lessc xxx.less xxxcss      #将less编译成css

npm ls less                #查看哪些模块使用这个库

#####################################################################
npm set registry https://registry.some_other_else       #增加镜像源
npm config rm registry                                  #删除镜像源
npm config list            #npm配置查看

设置镜像
~/.npmrc
registry = http://registry.npmmirror.com


#使用nrm进行源管理
npm install nrm -g --save
nrm ls
nrm use cnpm
nrm current
nrm del cnpm
nrm add cnpm http://r.cnpmjs.org/
