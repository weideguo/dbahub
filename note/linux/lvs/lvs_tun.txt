
##############################
只是包头封装，并没有加密数据
##############################


vip 192.168.59.220  #使用vip访问

LB 192.168.59.129

RS1 192.168.59.130

RS2 192.168.59.131

###########################
tunl0 ip隧道使用的网卡

#内核隧道技术
ipip    网卡名 tunl0
GRE     网卡名 gre0
sit     网卡名 sit0


#################RS1 RS2########################################################################
#设置网卡
ifconfig tunl0 192.168.59.220 broadcast 192.168.59.220 netmask 255.255.255.255 up
#设置路由
route add -host 192.168.59.220 dev tunl0

# arp_ignore
#0 响应任意网卡上接收到的对本机IP地址的arp请求（包括环回网卡上的地址），而不管该目的IP是否在接收网卡上。
#1 只响应目的IP地址为接收网卡上的本地地址的arp请求。
#2 只响应目的IP地址为接收网卡上的本地地址的arp请求，并且arp请求的源IP必须和接收网卡同网段。
#3 如果ARP请求数据包所请求的IP地址对应的本地地址其作用域（scope）为主机（host），则不回应ARP响应数据包，如果作用域为全局（global）或链路（link），则回应ARP响应数据包。
#4~7 保留未使用
#8 不回应所有的arp请求
#arp_announce
#0 允许使用任意网卡上的IP地址作为arp请求的源IP，通常就是使用数据包a的源IP。
#1 尽量避免使用不属于该发送网卡子网的本地地址作为发送arp请求的源IP地址。
#2 忽略IP数据包的源IP地址，选择该发送网卡上最合适的本地地址作为arp请求的源IP地址。
echo "1">/proc/sys/net/ipv4/conf/tunl0/arp_ignore
echo "2">/proc/sys/net/ipv4/conf/tunl0/arp_announce
echo "1">/proc/sys/net/ipv4/conf/all/arp_ignore
echo "2">/proc/sys/net/ipv4/conf/all/arp_announce

#0 不开启源地址校验。
#1 开启严格的反向路径校验。对每个进来的数据包，校验其反向路径是否是最佳路径。如果反向路径不是最佳路径，则直接丢弃该数据包。
#2 开启松散的反向路径校验。对每个进来的数据包，校验其源地址是否可达，即反向路径是否能通（通过任意网口），如果反向路径不同，则直接丢弃该数据包。
echo '0' > /proc/sys/net/ipv4/conf/tunl0/rp_filter
echo '0' > /proc/sys/net/ipv4/conf/all/rp_filter

################永久生效设置####################
####编辑/etc/sysctl.conf
#编辑对应的网卡配置文件


#####################LB#######################################################################
#设置网卡
ifconfig tunl0 192.168.59.220 broadcast 192.168.59.220 netmask 255.255.255.255 up
#设置路由
route add -host 192.168.59.220 dev tunl0

################永久生效设置####################
#编辑对应的网卡配置文件

##############################################################################################

ipvsadm -A -t 192.168.59.220:80 -s rr
ipvsadm -a -t 192.168.59.220:80 -r 192.168.59.130 -i
ipvsadm -a -t 192.168.59.220:80 -r 192.168.59.131 -i

 
