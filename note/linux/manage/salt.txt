##安装
yum install salt-master
yum install salt-minion

#master修改配置
/etc/salt/master

#minion修改配置文件
/etc/salt/minion
/etc/salt/minion_id 


#启动
service salt-master start
service salt-minion start


#对master操作
salt-key -a minion_ip     #将master接受minion-key
salt-key -d minion_ip     #将master删除minion-key

salt-key -L               #查看minion的key
                          #minion上线后master端联系，把自己的pubkey发过去，这时master接受该minion-key后，也就是master与minion已经互信


salt '*' sys.list_functions     #列出模块
salt '*' sys.list_modules       #列出function


##命令分发
salt "*" cmd.run "ifconfig"
salt -L '192.168.59.128,192.168.59.129' cmd.run 'ls /'




##文件分发
salt-cp '*' testfile.html /tmp
salt-cp 'test*' index.html /tmp/a.html



salt-run manage.status   ##查看所有minion状态
salt-run manage.down     ##查看所有没在线minion
salt-run manged.up       ##查看所有在线minion




salt-call test.ping           ##minion上执行自己执行test.ping命令
salt-call cmd.run 'ifconfig'  ##minion上执行自己执行cmd.run函数





##api
import salt.client
local = salt.client.LocalClient()   #使用默认配置，可以修改其他连接参数

local.opts['syndic_wait']=0         #重新设置这个参数 默认为5 会休眠5秒后再返回结果

#同步执行
local.cmd('*', 'cmd.run', ['whoami'])



#异步
r=local.run_job('*', 'cmd.run', ["sleep 10;echo 'eeee'"])
x=local.get_cli_returns(jid= r['jid'],minions=r['minions']) 
for i in x:
    print i







##实现多级master Salt Syndic

 master0               |   service salt-master start    |  #grep ^[a-z] /etc/salt/master
    |                  |                                |  order_masters: True
    |                  |                                |  
--------------         |                                |  
|            |         |                                |  
master1      master2   |   service salt-master start    |  #grep ^[a-z] /etc/salt/master
|                      |   service salt-syndic start    |  auto_accept: True
|                      |                                |  syndic_master: <master0-ip>
------------           |                                |  
|          |           |                                |  
minion11     minion12  |   service salt-minion start    |  #grep "^[a-Z]" /etc/salt/minion
                       |                                |  master: <master1-ip or master2-ip>



##state
#cat /srv/salt/nettools.sls
install_network_packages:        ###唯一即可
  pkg.installed:                 ##function
    - pkgs:                      ##参数
      - curl

#########################################################
salt 'minion1' state.apply nettools   


##################################
include:                ##实现引用
  - myslstest           ##引用myslstest.sls

##################################      





# cat /srv/salt/top.sls 
base:
  '*':
    - common            ##对所有其他引用 common.sls
  'minion1':
    - nettools          ##对minion1引用 nettools.sls

##############################################


salt '*' state.apply          ##使用top.sls

################################################################
##pillar    可以实现变量替换  变量值可以写在pillar文件或者在执行时直接赋值

salt '*' saltutil.refresh_pillar    ##刷新
salt '*' pillar.items               ##列出pillar值


#cat /srv/pillar/top.sls           #pillar默认路径，可以由master的配置文件修改 
base:
  '*':
    - pillar_demo
    
#cat pillar_demo.sls
myeditor: vim                         #设置变量myedit的值


#cat /srv/salt/pillar_test.sls 
install editor:
  pkg.installed:
    - name: {{ pillar['myeditor'] }}        #在sls文件中使用变量
    
##################################################################

salt '*' state.apply pillar_test                                ##使用文件的赋值进行变量替换
salt '*' state.apply pillar_test pillar='{"myeditore": "vi"}'    ##直接通过命令行指定pillar值





#cat /srv/salt/pillar_test.sls    
cmd-test:
  cmd.run:
    - names:
      - touch /tmp/cmdweewjgtest.txt
      - touch -f /tmp/{{ pillar['editor'] }}    
    
#cat /srv/salt/pillar_test.sls 
cmd_test:
  cmd.run:
    - name: touch -f /tmp/{{ pillar['editor'] }}
    - onlyif: touch -f /tmp/{{ pillar['editor'] }}         #执行成功时执行后面
    - unless: touch -f /tmp/{{ pillar['editor'] }}         #执行失败时执行后面



#sls文件中使用判断语句
{% if grains['os_family'] == 'RedHat' %}
apache: httpd
git: git
{% elif grains['os_family'] == 'Debian' %}
apache: apache2
git: git-core
{% endif %}
####################################################


##############################################################################
##分发文件
deploy the http.conf file:
  file.managed:
    - name: /etc/http/conf/http.conf      ##分发目标目录
    - source: salt://apache/http.conf     ##分发源目录   /srv/salt/下的相对路径

####################################################
##分发整个目录
copy some files to the web server:
  file.recurse:
    - name: /var/www
    - source: salt://apache/www
###############################################################################


salt '192.168.59.128' grains.items     ##获取机器的环境参数


