磁盘管理
du -sk directory_name  # 目录及子目录的总大小
df -k                  # 磁盘的使用情况
df -i                  # 查看inode
inode存储文件的元数据
inode编号
文件类型
文件的链接数目
属主的ID (UID)
属主的组 ID (GID)
文件的大小
文件所使用的磁盘块的实际数目
最近一次修改的时间
最近一次访问的时间
最近一次更改的时间


tune2fs -l /dev/sda3 | grep Block  ##查看文件系统block等

getconf PAGESIZE                   ##查看文件系统块大小

dd ##把指定的输入文件拷贝到指定的输出文件中

##添加磁盘
echo "scsi add-single-device 0 0 2 0"> /proc/scsi/scsi  ###第三个数对应为设备节点
echo "scsi add-single-device 0 0 3 0"> /proc/scsi/scsi  

fdisk                                      ##对物理设备【/dev/】进行分区，分区后需要挂载才能使用
fdisk -l                                   ##查看磁盘信息
fdisk /dev/sdb                             ##进行添加磁盘后才会在/dev下出现新的盘符，由提示命令进行分区

mkfs -t ext4 /dev/sdb1                     ##给分区创建文件系统
mkfs.ext3 lv_name                          ####给逻辑卷安装文件系统
mount /dev/sdb1 /u01                       ##不应该多个分区挂载到同一目录
                                           
/proc/sys/dev/cdrom/info                   ###光驱的信息文件，可由此获取光驱名
                                           
mount                                      ##挂载，外部存储设备需要挂载才能使用，物理设备在 【/dev/】目录下
mount /dev/cdrom /mnt                      ##前光驱挂载在【/mnt】目录下，即光驱的内容可以在【/mnt】下查看
mount  -a                                  ###挂载/etc/fstab的配置
/dev/sdc1 /update/game2 ext3 default 1 2   ###修改文件/etc/fstab开启时自动挂载

##修改/dev/shm的大小
tmpfs /dev/shm tmpfs defaults,size=1G 0 0  ##修改/etc/fstab挂载目录的大小
umount /dev/shm                            ###脱载分区
mount /dev/shm                             ##重新挂载实现修改
                                           
fuser -m /dev/cdrom                        ##查看那个进程正在使用挂载设备
lsof /dev/cdrom                            ##查看挂载点与正在使用的进程
lsblk                                      ##查看块设备

磁盘引导头 
MBR（master boot record）只支持不超过2T硬盘  
GPT（GUD Partition Table）支持2T磁盘 

parted /dev/sdb   ###使用parted命令创建gpt分区；fdisk只支持mbr

MBR主分区:最多只能创建4个主分区
扩展分区
逻辑分区：由扩展分区创建



主分区能够激活，通常用来引导系统。

扩展分区本身并不能直接用来存放数据，必须先划分成若干逻辑分区，逻辑分区是扩展分区进一步分割出来的区块，通常用来存储数据。
所有的逻辑分区都是扩展分区的一部分。 硬盘的容量=主分区的容量+扩展分区的容量（各个逻辑分区的容量之和）。

#################################################################################################################
LVM (Logical Volume Manager)               
##lv可以按磁盘分区的形式使用，安装文件系统后挂载
##可以在raid基础上再使用lvm

pv(physical volume,物理卷)  由分区构成
vg(volume group,卷组)       若干个pv组成
lv(logical volume,逻辑卷)   从vg中划分

/dev/mapper                                ###创建lv后生成的文件

pvcreate /dev/sdb1                         ##转换磁盘分区为物理卷
vgcreate vg_name /dev/sdb1                 ###创建名为vg_name的vg(Volume Group)
lvcreate -L 1000M lv_name vg_name          ##创建lv(Logical Volume)

vgextend vg_name /dev/hda6                 #扩展vg_name
lvextend -L 1G /dev/vg_name/lv_name        #扩展LV
resize2fs /dev/vg_name/lv_name             ###更新文件系统

xfs_growfs /dev/vg_name/lv_name            ###xfs文件系统使用这个替代  resize2fs


缩小无法在线缩小  需要先unmount
resize2fs /dev/linuxcast/mylv 5G           ###缩小磁盘分区
lvreduce -L -1G /dev/linuxcast/mylv        ###缩小LV
vgreduce linuxcast /dev/sdd                ###缩小卷组



pvdisplay   ##显示pv(Physical Volume)
pvscan
vgdisplay   ##显示vg信息
lvdisplay   ##显示lv信息

pvmove /dev/sda1              ##删除pv
vgmove vg_name                ##删除vg
lvmove /dev/vg_name/lv_name   ###删除lv


###################################新增分区######################小于等于2T


#将物理磁盘分区 进入交互模式操作 新建分区（请谨慎操作）
fdisk  /dev/sdb

#给分区安装文件系统
mkfs.ext3 /dev/sdb2

#挂载分区到指定目录
mkdir /data1
mount /dev/sdb2 /data1

#添加分区信息（用于在启动时进行挂载磁盘操作，之前的挂载操作重启后失效）
echo '/dev/sdb2 /data1 ext3 defaults 0 0' >> /etc/fstab

###################################扩容已有分区######################


#卸载正在使用的磁盘（会影响当前的使用）
umount /data

#将物理磁盘分区 进入交互模式操作 对已经存在的分区扩容（请谨慎操作）
fdisk  /dev/sdb

#刷新分区（因为是旧分区，说明已经存在文件系统，不需要再次安装）
resize2fs /dev/sdb1

#挂载分区到指定目录（原来的数据不会丢失）
mount /dev/sdb1 /data

###################################新增分区######################没有2T限制
yum install -y parted          # 安装parted工具

parted /dev/sdc                # 对磁盘进行分区
    # 在parted命令
    mklabel gpt                # 设置分区格式为GPT分区
    mkpart primary 1 100%      # 划分一个主分区、分区名为primary且100%容量给到第一个分区
    align-check optimal 1      # 查看是否对齐
    print
    quit                       # 退出

partprobe                      # 重读分区
fdisk -lu
fdisk -lu /dev/sdc             # 查看分区信息
mkfs -t xfs /dev/sdc1          # 给第一个分区创建文件系统


blkid /dev/sdc1                # 查看uuid信息
echo 'UUID=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx /data xfs defaults 0 0'  >> /etc/fstab          # 设置开机自动挂载分区

mount -a                       # 挂载磁盘，使用/etc/fstab的信息

###################################扩容已有分区######################
umount /data                   # 卸载  或者运行 umount /dev/sdc1 
parted /dev/sdc                #
    resizepart 1 100%          # 扩容第一个分区

mount -a                       # 重新挂载

############################################################################################
虚拟文件系统
#可用于对指定目录进行容量限制
dd if=/dev/zero of=/usr/disk-quota.ex4 count=4096 bs=1MB                            #创建4G的文件
mkfs -t ext4 -F /usr/disk-quota.ex4                                                 #创建文件系统   -F 强制，不会检查是否是设备文件
mount -o loop,rw,usrquota,grpquota /usr/disk-quota.ex4 /path/to/images/top/level    #挂载到容器目录


quota                  #磁盘使用限制
edquota                #编辑数据文件

##磁盘在线变化是从新扫描硬件（不会影响已经分区的数据？）
echo 1 > /sys/block/sdb/device/rescan

##查看物理盘情况
fdisk -l
