windows下
启动 start nginx.exe 
关闭 nginx.exe -s stop

linux下
nginx   启动
ps -ef | grep nginx  杀进程号关闭
编译安装
./configure --prefix=/usr
make && make install

nginx -t            # 验证配置文件是否正确
nginx -s reload     # 重新加载配置
nginx -s stop       #


在配置文件con/nginx.conf的http段中
upstream mytomcats {         ###设置集群
    ip_hash;                 ###
    server 127.0.0.1:8080;
    server 127.0.0.1:8085;   ###【weight=10】权值、【fail_timeout=3s】
}
    
server {
    listen       80;
    server_name  localhost;             # 一台主机可以多个server的端口相同，通过server_name映射不同的域名，dns配置不同域名对应这个主机，通过域名访问时会依此进行匹配

    ###可以有多个location，【/】也可以使用【~ (\.jsp)|(\.do)$】指定特定页面的代理
    location / {                        
        root   html;
        index  index.html index.htm;
        proxy_pass http://mytomcats;    ###指向代理集群，可以直接使用url
    }
}


#php的使用
location ~ \.php$ {
    root /data/tool/phpMyAdmin; 
    fastcgi_pass 127.0.0.1:9000;         #需要预先启动php
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
}

#账号登录
location / {
    auth_basic           "my site";
    auth_basic_user_file conf/htpasswd; 
    #使用htpasswd 创建格式为 user:user_encrypted_passwd 的用户密码对 
    #htpasswd -nb admin a123456
}

#连接
#curl --user "admin:a123456" $host:$port
#curl -H "Authorization: Basic $user_passwd_base64" $host:$port
#使用user参数即为将账号密码对进行base64编码后放入header的Authorization


#直接返回客户端ip
location /ip {
    default_type text/plain;
    return 200 $remote_addr;
}

location /json_ip {
    default_type application/json;
    return 200 "{\"ip\":\"$remote_addr\"}";
}

无 前缀匹配
=  用于不包含正则表达式的uri前，与指定的模式精确匹配
~  用于表示当前uri中包含了正则表达式，并且区分大小写 
~* 用于表示当前uri中包含了正则表达式，并且不区分大小写

# spa应用时 
location / {
  try_files $uri $uri/ /index.html;
}

首先尝试查找与请求 URI 完全匹配的文件 ($uri)
如果没找到，尝试查找以该 URI 命名的目录 ($uri/)
如果前两者都不存在，则返回 /index.html


#跨站点请求允许 CORS Cross-Origin Resource Sharing
add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

#直接展示文件
autoindex on;              # 开启目录文件列表
autoindex_exact_size on;   # 显示出文件的确切大小，单位是bytes
autoindex_localtime on;    # 显示的文件时间为文件的服务器时间
charset utf-8,gbk;         # 避免中文乱码

#引入其他配置文件
include nginx_config_filename;
