ping           ##测试网络连接  
host、dig      ##测试DNS解析 
ip route       ##显示路由表
traceroute     ##追踪到达目标地址的网络路径 
mtr            ##网络质量测试 
netperf        ##测试网络带宽



#以下只在当前生效 重启生效需要设置对应文件
ifconfig lo:1 192.168.59.200 netmask 255.255.255.255               #增加虚拟网卡

ifconfig lo:1 down                                                 #关闭网卡 虚拟网卡直接删除

ifconfig eht1 down                                                 #关闭网卡
ifconfig eth1 up                                                   #启动网卡


#添加路由
route add -host 192.168.168.119  gw  192.168.168.1
route add -host 192.168.59.200   dev lo:1   
route add -net 192.168.59.0/24   dev eth0
route add -net 192.168.168.0/24  gw  192.168.168.1
route add default gw 192.168.59.129                   #默认路由/网关

#删除路由
route del -host 192.168.168.111
route del -net 192.168.168.0/24
route del default gw 192.168.59.2                     #删除网关

route ##查看路由


route  [add|del] [-net|-host] target [netmask Nm] [gw Gw] [[dev] If]

add     : 添加一条路由规则
del     : 删除一条路由规则
-net    : 目的地址是一个网络
-host   : 目的地址是一个主机
target  : 目的网络或主机
netmask : 目的地址的网络掩码
gw      : 路由数据包通过的网关
dev     : 为路由指定的网络接口



ip a l eth0   ##查看网卡的ip信息
ip a l eth1   ##

ip addr show  #类似ifconfig


#在网卡上绑定另外的ip 也可以对虚拟网卡帮多个ip 类似于创建虚拟网卡，只是不能使用ifconfig命令管理
ip addr add 192.168.1.100 dev eht2

#将网卡上绑定的ip删除
ip addr del 192.168.1.100 dev eht2
ip addr del 192.168.1.100 dev eht2


/etc/sysconfig/network-scripts/ifcfg-eth0  ###配置文件
重启网卡 
1. service network restart
2. ifconfig eth0 down   ##etho为网卡名，使用ifconfig -a查看
   ifconfig eth0 up
3. ifdown eth0
   ifup eth0
ethtool eth0    #查看网卡物理特性
ethtool -i eth0 #查看驱动信息
ethtool -s eth0 #查看网卡状态

虚拟ip(vip)
ifconfig eth0:1 192.168.10.100 netmask 255.255.255.0          ###eth0为网卡，eth0:1 为子网卡
ip addr del 192.168.10.100 dev eth0:1                         ###删除
ip link delete eth0:1

ip [ OPTIONS ] OBJECT { COMMAND | help }

OBJECT := { link | addr | addrlabel | route | rule | neigh | tunnel | maddr | mroute | monitor }
OPTIONS := { -V[ersion] | -s[tatistics] | -r[esolve] | -f[amily] { inet | inet6 | ipx | dnet | link } | -o[neline] }



nsenter     #管理namespace


arping -c 3 -U -I eth0 192.168.10.100                            ###更新arp

arping -c 4 -s ${vip} -I ${netword_card} ${gateway}              ###向网关通知vip的更新



#静态域名解析
/etc/hosts

nslookup a.com                # 查看域名解析信息


netstat -nlap |grep .21|more  ##查看端口21 ftp服务器启动不得时可能时端口被占用的问题
netstat -nlt | grep 3306
netstat -nat                  ##连接数查看

netstat -ntlpa                ##查看连接      
netstat -nulpa                ##查看udp端口

ss                            ##类似于netstat



CLOSED         没有使用这个套接字[netstat 无法显示closed状态]
LISTEN         套接字正在监听连接[调用listen后]
SYN_SENT       套接字正在试图主动建立连接[发送SYN后还没有收到ACK]
SYN_RECEIVED   正在处于连接的初始同步状态[收到对方的SYN，但还没收到自己发过去的SYN的ACK]
ESTABLISHED    连接已建立
CLOSE_WAIT     远程套接字已经关闭，正在等待关闭这个套接字[被动关闭的一方收到FIN]
FIN_WAIT_1     套接字已关闭，正在关闭连接[发送FIN，没有收到ACK也没有收到FIN]
CLOSING        套接字已关闭，远程套接字正在关闭，暂时挂起关闭确认[在FIN_WAIT_1状态下收到被动方的FIN]
LAST_ACK       远程套接字已关闭，正在等待本地套接字的关闭确认[被动方在CLOSE_WAIT状态下发送FIN]
FIN_WAIT_2     套接字已关闭，正在等待远程套接字关闭[在FIN_WAIT_1状态下收到发过去FIN对应的ACK]
TIME_WAIT      这个套接字已关闭，正在等待远程套接字的关闭传送[FIN、ACK都发送完毕，这是主动方的最后一个状态，在过了2MSL时间后变为CLOSED状态]




关闭ICMP回应(不能使用ping命令连接)

临时设置
#设置为0，开启；1，关闭
echo 0 >/proc/sys/net/ipv4/icmp_echo_ignore_all

永久设置
#vim /etc/sysctl.conf
net.ipv4.icmp_echo_ignore_all=1



开启器端路由转发功能
vi /etc/sysctl.conf
net.ipv4.ip_forward = 1

#将经过自己的流量转发到真正的目标地址
echo 1 > /proc/sys/net/ipv4/ip_forward
sysctl -w net.ipv4.ip_forward=1



tcpdump 导出后的文件可以使用wireshark打开

#traffic control 流量控制
tc


tcpkill

tcpkill -9 -i ens33 host 192.168.85.1 and port 49627
