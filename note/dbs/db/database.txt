CAP 
一个数据库不可能同时满足
一致性（Consistency）				执行了一次成功的写操作之后，未来的读操作一定可以读到这个写入的值
可用性（Availability）				系统总是可读可写的
分区容错性（Partition-Tolerance）


OLTP (Online Transaction Processing) 联机事务处理
OLAP (Online Analytical Processing)  联机分析处理

事务四特性 ACID
原子性 atomicity
一致性 consistency
隔离性 isolation
持久性 durability

CRUD  create/retrieve/update/delete

2PC 两阶段提交
two phase commit







NOSQL
BASE模型
basically available		基本可用
soft state				软状态	状态可以有一段时间不同步
eventually consistent	最终一致




b树与b+树
b树在非叶子节点也存放指向数据的指针，b+树只在叶子节点存放指向数据的指针
应用在数据库上
b树的非叶子节点数据量较大，适用于内存型数据库，不必遍历到叶子节点再由指针找到对应数据
b+树非叶子节点数据量较小，可以节省内存空间，适用于磁盘型数据库，只需要加载非叶子节点到内存即可



bitmap index  （mysql不支持）
位图索引是一种使用位图的特殊数据库索引。主要针对大量相同值的列而创建。

如性别列，位图索引形成两个向量，向量的每一位表示该行是否对应值，是则1，否0，
男向量为 10100
女向量为 01011



空间索引
常规索引只适用单一维度，空间索引可以适用多维度，如经纬度坐标比较   (a,b)<(longitude,latitude)<(x,y)

R树 R+树 R*树 QR树 SS树 X树



LSM 
Log Structured-Merge Tree





数据库中的 latch / Lock

Latch是对内存数据结构提供互斥访问的一种机制，Latch的访问，包括查询也是互斥的，任何时候，只能有一个并发能pin住内存的某一块。而Lock是以不同的模式来套取共享资源对象，各个模式间存在着兼容或排斥。
Latch只作用于内存中，他只能被当前实例访问，而Lock作用于数据库对象（行/表/索引/库）。
Latch是瞬间的占用，释放，Lock的释放需要等到事务正确的结束，占用的时间长短由事务大小决定。
Latch是非入队的，而Lock是入队的。
Latch不存在死锁，而Lock中存在。Latch又可以分为mutex（互斥量）和rwlock（读写锁）。其目的是用来保证并发操作临界资源的正确性，并且通常没有死锁检测的机制。


latch 即代码级别的锁，在代码中通过加锁，禁止其他并发进行下一步操作。
lock  即DBMS中抽象的锁，比如对数据行的锁。



火山模型/迭代模型  Volcano Model / Iterator Model
解释计算模型，将关系代数中每一种操作（如Project、Select、Scan）抽象为一个 Operator，将整个 SQL 构建成一个 Operator 树，查询树从根节点到叶子结点自顶向下递归调用Next()接口，数据则自底向上被拉取处理。


物化模型 Materialization Model

向量化/批处理模型 Vectorized / Batch Model

