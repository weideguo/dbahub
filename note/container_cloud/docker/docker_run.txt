使用镜像运行容器

docker run -i ubuntu /bin/bash                                                                   ###创建容器，运行，进入交互模式
docker run -v $host_dir:$docker_dir $container_name                                              ###-v挂载主机文件夹到容器
docker run -p $host_ip:$host_Port:$container_port $container_name                                ####容器与主机端口映射
docker run -it --name my_docker_name --link docker_name:alias_name image_name /bin/bash          #启动镜像image_name命名为my_docekr_name,连接到命名为docker_name的容器,并设置别名为alias_name。使用alias_name可以当做host_name使用从而进行连接

docker run -it centos7 /bin/sh                                                                   #使用镜像创建新容器并进入shell，quit退出时会结束容器   【 ctl+p ctl+q】退出时不结束容器

    -i                               #交互模式
    -t                               #分配一个伪终端(pseudo-TTY)
    -d                               #后台进行方式运行                  #紧跟的命令不能发生退出 否则容器会停止   
    -p 8080:80                       #容器的80映射到主机8080
    -p 127.0.0.1:8080:80             #端口绑定到127.0.0.1:8080
    --expose 80 81                   #开放一组端口
    --user user_name                 #使用镜像中指定用户启动容器
                                   
    -v <conteiner path>              #挂载容器指定目录，可以使用 docker inpect <container id> 查看挂载目录对应主机的路径
    -v <host path>:<container pth>   #将主机的目录挂载到容器的目录
    --env XXX=YYY                    #可以有多个--env
    --restart                     
         no                          #不自动启动容器
        always                       #一直尝试启动直到成功
        on-failure:10                #尝试10次都失败后不再启动
    
    --privileged                     #赋予容器几乎与主机相同的权限
        
#容器内服务自自动  
通过linux的服务自启动方式实现，即写入/etc/rc.local或者相关文件？    
通过Dockerfiler中设置启动命令 


docker port <container_id>          # 列出端口映射

docker port <container_id>  8080    # 更改端口映射
