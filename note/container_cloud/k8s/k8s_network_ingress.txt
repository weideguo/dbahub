1、启动pod（用pod、deploy方式）
2、设置svc绑定pod                    相当于在每个node节点开一个端口映射到应用（NodePort模式时）；使用ingress时则使用 ClusterIP 即可
3、设置ingress域名绑定svc            相当于在每个node节点设置一个域名
4、外部dns设置域名解析到任意一个node（或者再做一层nginx对多个node进行负载均衡，然后域名解析到这个nginx，通过nginx转发给node）
5、通过域名即可访问pod的应用





常用的Ingress控制器有：
Nginx Ingress Controller
Traefik
Kong


反向代理与负载均衡



Ingress配置通过主机名称(example.com)和路径名(/app1和/app2)，将外部请求路由到两个服务(app1-service和app2-service)上

``` yaml
# example_ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
spec:
  rules:
    - host: example.com                             
      http:
        paths:
          - path: /app1
            pathType: Prefix
            backend:
              service:
                name: app1-service
                port:
                  number: 80
          - path: /app2
            pathType: Prefix
            backend:
              service:
                name: app2-service
                port:
                  number: 80
```


#应用到Kubernetes集群中：
kubectl apply -f <yaml-file-name>

# 查看已应用的Ingress对象：
kubectl get ingress


kubectl get pods -A | grep ingress    

# 每个node运行一个ingress的pod，即一个nginx进程

创建一个ingress资源即增加一条nginx的配置
通过域名访问到nginx，nginx则由域名转到对应的服务（原理为通过server_name确定是要配置哪个配置）
