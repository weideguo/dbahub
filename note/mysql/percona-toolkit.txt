percona-toolkit
#安装
yum install perl perl-devel perl-Time-HiRes perl-DBI perl-DBD-MySQL

#online ddl
bin/pt-online-schema-change --alter="add key(openId,status)" --execute u=root,p=,h=10.66.137.197,P=3306,D=wxkf,t=tbFans_bak


pt-table-checksum
#在主库运行。在主库、从库的表进行checksum，判断数据是否一致。执行过的sql语句记录到binlog。不在意从库延时，延迟多少，计算的校验值都一样。
pt-table-checksum --nocheck-replication-filters --no-check-binlog-format --replicate=test.checksum --databases=mydatabase --tables=mytable --chunk_size=100 h=127.0.0.1,u=root,P=3306  

#主库中计算crc
COALESCE(LOWER(CONV(BIT_XOR(CAST(CRC32( 主键 ) AS UNSIGNED)), 10, 16)), 0)
执行时自动切换binlog格式为statement，传输 replace ... (..,this_cnt,this_crc,..)... select 语句实现在同一时刻（执行顺序）对表进行校验

#将主库的校验值更新到主从校验表

UPDATE `test`.`checksum` SET  master_crc = '2f9cca9c', master_cnt = '1' WHERE db = 'mydatabase' AND tbl = 'mytable' AND chunk = '1'

#从库中对比每个chunk
master_cnt <> this_cnt OR master_crc <> this_crc OR ISNULL(master_crc) <> ISNULL(this_crc) 


pt-table-sync
#用来修复多个实例之间数据的不一致。内部集成了pt-table-checksum的校验功能


# 同步并删除
pt-archiver --source h=127.0.0.1,u=test,p='test',D='test',t=t1 --dest h=127.0.0.1,u=test,p='test',D='test',t=t1_old --where "id <= 10000" --limit=1000 --txn-size 2000 --progress 5000 --charset=utf8 --sleep 1 --no-version-check --bulk-delete --bulk-insert


# 只删除
pt-archiver --source h=127.0.0.1,u=test,p='test',D='test',t=t1  --where "id <= 10000" --limit=1000 --txn-size 2000 --progress 5000 --charset=utf8 --sleep 1 --no-version-check --bulk-delete 


# 按照一定规则killmysql线程
# 如执行时间超过多久
pt-kill 


# 持续执行 `SHOW ENGINE INNODB STATUS` 获取死锁的信息
pt-deadlock-logger h=host,P=port,u=user  --dest h=save_host,P=save_port,u=save_user,D=test_db,t=deadlocks --ask-pass

pt-deadlock-logger h=host,P=port,u=user,p=passwd  --dest h=save_host,P=save_port,u=save_user,p=save_passwd,D=test_db,t=deadlocks

--create-dest-table  创建存储死锁信息的表
--interval           轮询间隔，默认30秒  
--daemonize          

